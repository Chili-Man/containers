name: Build Container Images

on:
  push:
    branches:
      - main

  pull_request:
    branches:
      - main

  # Match SemVer tags
  tags:
    - '[0-9]+.[0-9]+.[0-9]+'

jobs:
  # Run the linter
  lint:
    name: Linter
    runs-on: ubuntu-22.04

    # Grant status permission for MULTI_STATUS on Super-Linter
    permissions:
      contents: read
      packages: read
      statuses: write

    steps:
      - name: Git Code Checkout
        uses: actions/checkout@v3

      - name: Run Super-Linter
        uses: super-linter/super-linter/slim@v5
        env:
          DEFAULT_BRANCH: main
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

          # Linters to enable
          VALIDATE_BASH: true
          VALIDATE_BASH_EXEC: true
          VALIDATE_DOCKERFILE_HADOLINT: true
          VALIDATE_YAML: true


  # Build the container images
  build-certificate-manager:
    name: Build Certificate Manager
    runs-on: ubuntu-22.04

    steps:
      - name: Git Code Checkout
        uses: actions/checkout@v3

        # For building ARM64 images
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: arm64

      - name: Docker Buildx Setup
        uses: docker/setup-buildx-action@v2
        with:
          version: v0.11.2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Docker metadata
        id: docker-meta
        uses: docker/metadata-action@v4
        with:
          images: habanero/certificate-manager
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}

      # IDEA:
      # https://docs.docker.com/build/ci/github-actions/test-before-push/

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: images/certificate-manager/
          platforms: linux/amd64,linux/arm64
          provenance: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.docker-meta.outputs.tags }}
          labels: ${{ steps.docker-meta.outputs.labels }}
